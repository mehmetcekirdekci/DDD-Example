// <auto-generated />
using System;
using System.Collections.Generic;
using DDD_Example.Vehicle.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DDD_Example.Vehicle.Infrastructure.Migrations
{
    [DbContext(typeof(VehicleDbContext))]
    [Migration("20250109204055_InitialCreate2")]
    partial class InitialCreate2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DDD_Example.Vehicle.Domain.Aggregates.Vehicles.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.ComplexProperty<Dictionary<string, object>>("Brand", "DDD_Example.Vehicle.Domain.Aggregates.Vehicles.Vehicle.Brand#Brand", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("text");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Color", "DDD_Example.Vehicle.Domain.Aggregates.Vehicles.Vehicle.Color#Color", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Code")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("text");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Mileage", "DDD_Example.Vehicle.Domain.Aggregates.Vehicles.Vehicle.Mileage#Mileage", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<int>("Value")
                                .HasColumnType("integer");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Plate", "DDD_Example.Vehicle.Domain.Aggregates.Vehicles.Vehicle.Plate#Plate", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("text");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Price", "DDD_Example.Vehicle.Domain.Aggregates.Vehicles.Vehicle.Price#Price", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<decimal>("Amount")
                                .HasColumnType("numeric");

                            b1.Property<int>("Currency")
                                .HasColumnType("integer");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Type", "DDD_Example.Vehicle.Domain.Aggregates.Vehicles.Vehicle.Type#Type", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("text");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Year", "DDD_Example.Vehicle.Domain.Aggregates.Vehicles.Vehicle.Year#Year", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<int>("Value")
                                .HasColumnType("integer");
                        });

                    b.HasKey("Id");

                    b.ToTable("Vehicles", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
